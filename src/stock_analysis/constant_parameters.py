import json

HEADERS: dict[str, str] = {
    "accept": "application/json",
    "accept-language": "en-IN,en-GB;q=0.9,en;q=0.8,en-US;q=0.7",
    "content-type": "text/plain;charset=UTF-8",
    "origin": "https://in.tradingview.com",
    "referer": "https://in.tradingview.com/",
    "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0",
}

PARAMS: dict[str, str] = {
    "label-product": "screener-stock",
}

COLUMNS: dict[str, str] = {
    "name": "symbol",
    "description": "stock_description",
    "logoid": "logo_id",
    "update_mode": "update_mode",
    "type": "security_type",
    "close": "close_price",
    "pricescale": "price_scale",
    "minmov": "minimum_movement",
    "fractional": "fractional",
    "minmove2": "minimum_movement_2",
    "currency": "currency",
    "change": "price_change",
    "volume": "volume",
    "relative_volume_10d_calc": "relative_volume_10d",
    "market_cap_basic": "market_cap",
    "fundamental_currency_code": "base_currency",
    "price_earnings_ttm": "pe_ratio_ttm",
    "earnings_per_share_diluted_ttm": "eps_diluted_ttm",
    "earnings_per_share_diluted_yoy_growth_ttm": "eps_growth_yoy_ttm",
    "dividends_yield_current": "dividend_yield",
    "sector.tr": "sector_tr",
    "market": "market",
    "sector": "sector",
    "recommendation_mark": "recommendation_score",
    "open": "open_price",
    "high": "high_price",
    "low": "low_price",
    "VWAP": "vwap",
    "premarket_open": "premarket_open",
    "premarket_high": "premarket_high",
    "premarket_low": "premarket_low",
    "premarket_close": "premarket_close",
    "postmarket_open": "postmarket_open",
    "postmarket_high": "postmarket_high",
    "postmarket_low": "postmarket_low",
    "postmarket_close": "postmarket_close",
    "SMA20": "sma_20",
    "SMA50": "sma_50",
    "SMA100": "sma_100",
    "EMA20": "ema_20",
    "EMA50": "ema_50",
    "EMA200": "ema_200",
    "RSI": "rsi",
    "MACD.macd": "macd_line",
    "MACD.signal": "macd_signal",
    "BB.upper": "bollinger_upper",
    "BB.basis": "bollinger_middle",
    "BB.lower": "bollinger_lower",
    "ATR": "atr",
    "gap": "price_gap",
    "Pivot.M.Classic.R1": "pivot_resistance_1",
    "Pivot.M.Classic.S1": "pivot_support_1",
    "Perf.W": "performance_weekly",
    "Perf.1M": "performance_1m",
    "Perf.3M": "performance_3m",
    "beta_1_year": "beta_1y",
    "relative_volume_10d_calc|1W": "relative_volume_10d_1w",
    "average_volume_10d_calc": "avg_volume_10d",
    "average_volume_30d_calc": "avg_volume_30d",
    "Candle.3BlackCrows": "candle_three_black_crows",
    "Candle.3WhiteSoldiers": "candle_three_white_soldiers",
    "Candle.AbandonedBaby.Bearish": "candle_abandoned_baby_bearish",
    "Candle.AbandonedBaby.Bullish": "candle_abandoned_baby_bullish",
    "Candle.Doji": "candle_doji",
    "Candle.Doji.Dragonfly": "candle_doji_dragonfly",
    "Candle.Doji.Gravestone": "candle_doji_gravestone",
    "Candle.Engulfing.Bearish": "candle_engulfing_bearish",
    "Candle.Engulfing.Bullish": "candle_engulfing_bullish",
    "Candle.EveningStar": "candle_evening_star",
    "Candle.Hammer": "candle_hammer",
    "Candle.HangingMan": "candle_hanging_man",
    "Candle.Harami.Bearish": "candle_harami_bearish",
    "Candle.Harami.Bullish": "candle_harami_bullish",
    "Candle.InvertedHammer": "candle_inverted_hammer",
    "Candle.Kicking.Bearish": "candle_kicking_bearish",
    "Candle.Kicking.Bullish": "candle_kicking_bullish",
    "Candle.LongShadow.Lower": "candle_long_shadow_lower",
    "Candle.LongShadow.Upper": "candle_long_shadow_upper",
    "Candle.Marubozu.Black": "candle_marubozu_black",
    "Candle.Marubozu.White": "candle_marubozu_white",
    "Candle.MorningStar": "candle_morning_star",
    "Candle.ShootingStar": "candle_shooting_star",
    "Candle.SpinningTop.Black": "candle_spinning_top_black",
    "Candle.SpinningTop.White": "candle_spinning_top_white",
    "Candle.TriStar.Bearish": "candle_tristar_bearish",
    "Candle.TriStar.Bullish": "candle_tristar_bullish",
    "exchange": "exchange",
    "Recommend.All": "recommendation_overall",
}

INDEX: list[str] = ["SYML:NSE;NIFTY", "SYML:NSE;NIFTYJR"]

MARKET: list[str] = ["india"]

DATA: str = json.dumps(
    {
        "columns": list(COLUMNS.keys()),
        "symbols": {"symbolset": INDEX},
        "markets": MARKET,
    }
)

SCANNER_URL: str = "https://scanner.tradingview.com/india/scan"
